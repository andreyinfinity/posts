services:

  postgres_db:
    image: postgres:alpine
    container_name: postgres
    expose:
      - 5432
    volumes:
      - ./pg_data:/var/lib/postgresql/data/
    environment:
      PGDATA: /var/lib/postgresql/data/
    env_file:
      - .env
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: .
    container_name: backend
    expose:
      - 8000
    volumes:
      - .:/code
      - ./static:/code/static
      - ./media:/code/media
    env_file:
      - .env
    depends_on:
      postgres_db:
        condition: service_healthy
    tty: true
    command: sh -c "python manage.py migrate && 
      python manage.py collectstatic --no-input && 
      gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    restart: always

  nginx:
    build: ./nginx_config
    volumes:
      - ./static:/var/www/html/static
      - ./media:/var/www/html/media
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: always

volumes:
  pg_data:
  static:
  media:
